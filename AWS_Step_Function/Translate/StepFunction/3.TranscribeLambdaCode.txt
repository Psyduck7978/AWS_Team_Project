import AWS from 'aws-sdk';

const transcribe = new AWS.TranscribeService();
const s3 = new AWS.S3();

export const handler = async (event) => {
    console.log('Received event:', JSON.stringify(event, null, 2));

    // 버킷과 파일 경로를 이벤트에서 추출
    const bucket = event.bucket || 's3-rocket-ott';  // S3 버킷
    const file = event.file || 'your_file_name.mp4';  // S3 파일명

    // S3 이벤트에서 bucket과 file 정보를 추출
    if (!bucket || !file) {
        throw new Error('Bucket or file information is missing in the event.');
    }

    // Transcribe 작업을 위한 언어 코드 추출
    let languageCode = 'en-US';  // 기본값은 영어
    if (file.includes('ja')) {
        languageCode = 'ja-JP';  // 일본어
    } else if (file.includes('en')) {
        languageCode = 'en-US';  // 영어
    }

    // 첫 번째 Transcribe 작업 (JSON 형식으로 저장)
    const jsonOutputKey = `srt/${file.split('/').pop()}.json`;  // 첫 번째 결과는 .json으로 저장

    const params = {
        TranscriptionJobName: `transcribe-${Date.now()}`,
        LanguageCode: languageCode,
        Media: {
            MediaFileUri: `s3://${bucket}/${file}` // S3의 파일 URI
        },
        OutputBucketName: bucket,  // 결과물이 저장될 S3 버킷
        OutputKey: jsonOutputKey,  // .json 파일 경로
        // Subtitles는 첫 작업에서는 제외 (JSON 형식으로 저장)
    };

    try {
        // 첫 번째 Transcribe 작업 시작 (JSON 형식으로 저장)
        const transcribeJob = await transcribe.startTranscriptionJob(params).promise();
        console.log(`Transcription job started: ${transcribeJob.TranscriptionJobName}`);

        // Transcribe 작업이 성공적으로 시작된 후, SRT 변환 작업을 실행
        // 두 번째 Transcribe 작업에서는 SRT 포맷으로 변환된 파일을 생성
        const srtOutputKey = `srt/${file.split('/').pop()}.json`;

        const srtParams = {
            TranscriptionJobName: `transcribe-srt-${Date.now()}`,
            LanguageCode: languageCode,
            Media: {
                MediaFileUri: `s3://${bucket}/${file}` // S3의 파일 URI
            },
            OutputBucketName: bucket,  // 결과물이 저장될 S3 버킷
            OutputKey: srtOutputKey,  // SRT 파일 경로 (json.srt 형식)
            Subtitles: {
                Formats: ['srt']  // SRT 파일 포맷 설정
            }
        };

        // 두 번째 작업 실행 (SRT 변환)
        const srtTranscribeJob = await transcribe.startTranscriptionJob(srtParams).promise();
        console.log(`SRT Transcription job started: ${srtTranscribeJob.TranscriptionJobName}`);

        // Transcribe 작업이 시작되었음을 리턴 (bucket과 file 정보 포함)
        return {
            statusCode: 200,
            body: JSON.stringify({
                message: `Transcription jobs started successfully`,
                transcriptionJobName: transcribeJob.TranscriptionJobName,
                srtTranscriptionJobName: srtTranscribeJob.TranscriptionJobName,
                bucket: bucket,
                file: file,  // S3에서 사용한 파일 정보 반환
				languageCode: languageCode,
                jsonOutputUri: `s3://${bucket}/${jsonOutputKey}`,  // JSON 파일 경로
                srtOutputUri: `s3://${bucket}/${srtOutputKey}`  // SRT 파일 경로 (json.srt)
            })
        };
    } catch (error) {
        console.error('Error starting transcription job:', error);
        throw new Error(`Failed to start transcription job: ${error.message}`);
    }
};
